package RFIDManagement.view;

import java.awt.Toolkit;
import java.io.*;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerException;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;
import org.w3c.dom.Document;
import org.xml.sax.SAXException;

/**
 * @author Team 16
 * @created 11/05/2016 - v0.5
 * @RFID tag search and edit UI
 */
public class SearchStudent extends javax.swing.JFrame {

    private String id;
    private String name;
    private String room;
    private String url;
    private File file;

    private String oldID;
    private String oldName;
    private String oldRoomNo;
    private String oldUrl;

    /**
     * Creates new form SearchResult
     */
    public SearchStudent(ArrayList<String> toPass, File file) {
        if (toPass != null && file != null) {
            initComponents();
            this.idTxt.setText(toPass.get(0));
            this.nameTxt.setText(toPass.get(1));
            this.roomTxt.setText(toPass.get(2));
            this.urlTxt.setText(toPass.get(3));
            this.file = file;
        } else {
            initComponents();
        }
        this.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("5.png")));
    }

    private void updateAttributs(String name, String id, String room, String url) {
        this.id = id;
        this.name = name;
        this.room = room;
        this.url = url;
    }

    private void resetAttributs() {
        this.nameTxt.setText("");
        this.idTxt.setText("");
        this.roomTxt.setText("");
        this.urlTxt.setText("");

    }

    public boolean checkID(String toCheck) {
        try {
            Integer.parseInt(toCheck);
        } catch (NumberFormatException | NullPointerException e) {
            return false;
        }
        return true;
    }

    public boolean checkRoom(String toCheck) {
        try {
            Integer.parseInt(toCheck);
        } catch (NumberFormatException | NullPointerException e) {
            return false;
        }
        return true;
    }

    public boolean checkName(String toCheck) {
        return !toCheck.isEmpty();
    }

    public boolean checkURL(String toCheck) {
        if (toCheck.isEmpty()) {
            return false;
        }
        int k = 0;
        toCheck = toCheck.toUpperCase();
        char[] stringToCharArray = toCheck.toCharArray();
        if (stringToCharArray.length < 10) {
            return false;
        }
        char[] http = new char[]{'H', 'T', 'T', 'P'};
        for (int i = 0; i < 4; i++) {
            if (stringToCharArray[i] == http[i]) {
                k++;
            }
        }
        return k == 4;
    }

    private void enableEdit(Boolean b) {
        rstDelete.setVisible(b);
        rstSave.setVisible(b);
        idTxt.setEnabled(b);
        nameTxt.setEnabled(b);
        //roomTxt.setEnabled(b);
        urlTxt.setEnabled(b);
        if (b) {
            rstEdit.setText("Cancel");
        } else {
            rstEdit.setText("Edit");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        resultLable = new javax.swing.JLabel();
        idLab = new javax.swing.JLabel();
        nameLab = new javax.swing.JLabel();
        roomLab = new javax.swing.JLabel();
        urlLab = new javax.swing.JLabel();
        idTxt = new javax.swing.JTextField();
        nameTxt = new javax.swing.JTextField();
        roomTxt = new javax.swing.JTextField();
        urlTxt = new javax.swing.JTextField();
        rstDelete = new javax.swing.JButton();
        rstEdit = new javax.swing.JButton();
        rstSave = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("RFID Management");

        resultLable.setText("Search Result:");

        idLab.setText("Student ID:");

        nameLab.setText("Name:");

        roomLab.setText("Room Number:");

        urlLab.setText("Profile Url:");

        idTxt.setEnabled(false);

        nameTxt.setEnabled(false);

        roomTxt.setEnabled(false);

        urlTxt.setEnabled(false);

        rstDelete.setText("Delete");
        rstDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rstDeleteActionPerformed(evt);
            }
        });

        rstEdit.setText("Edit");
        rstEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rstEditActionPerformed(evt);
            }
        });

        rstSave.setText("Save");
        rstSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rstSaveActionPerformed(evt);
            }
        });

        rstDelete.setVisible(false);
        rstSave.setVisible(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(rstSave)
                        .addGap(18, 18, 18)
                        .addComponent(rstDelete)
                        .addGap(18, 18, 18)
                        .addComponent(rstEdit))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(urlLab)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(urlTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(resultLable)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(roomLab)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(roomTxt))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(idLab)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(idTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(32, 32, 32)
                                .addComponent(nameLab)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(resultLable)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idLab)
                    .addComponent(idTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameLab)
                    .addComponent(nameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(roomLab)
                    .addComponent(roomTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(urlLab)
                    .addComponent(urlTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rstEdit)
                    .addComponent(rstDelete)
                    .addComponent(rstSave))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void rstEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rstEditActionPerformed
        // TODO add your handling code here:
        if (rstEdit.getText() == "Edit") {
            oldID = idTxt.getText();
            oldName = nameTxt.getText();
            oldRoomNo = roomTxt.getText();
            oldUrl = urlTxt.getText();
            enableEdit(true);
        } else {
            idTxt.setText(oldID);
            nameTxt.setText(oldName);
            roomTxt.setText(oldRoomNo);
            urlTxt.setText(oldUrl);
            enableEdit(false);
        }
    }//GEN-LAST:event_rstEditActionPerformed

    private void rstSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rstSaveActionPerformed
        // TODO add your handling code here:
        if (checkID(idTxt.getText())) {
            if (checkRoom(roomTxt.getText())) {
                if (checkName(nameTxt.getText())) {
                    if (checkURL(urlTxt.getText())) {

                        this.updateAttributs(nameTxt.getText(), idTxt.getText(), roomTxt.getText(), urlTxt.getText());
                        DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();
                        DocumentBuilder dBuilder = null;
                        Document doc = null;
                        try {
                            dBuilder = dbFactory.newDocumentBuilder();
                            doc = dBuilder.parse(file);
                            doc.getElementsByTagName("name").item(0).setTextContent(name);
                            doc.getElementsByTagName("id").item(0).setTextContent(id);
                            doc.getElementsByTagName("room").item(0).setTextContent(room);
                            doc.getElementsByTagName("proUrl").item(0).setTextContent(url);
                            TransformerFactory transformerFactory = TransformerFactory.newInstance();
                            Transformer transformer = transformerFactory.newTransformer();
                            DOMSource source = new DOMSource(doc);
                            StreamResult result = new StreamResult(file);
                            transformer.transform(source, result);
                            enableEdit(false);
                            JOptionPane.showMessageDialog(null, "Edit completed!");
                        } catch (IOException | SAXException | ParserConfigurationException | TransformerException ex) {
                            Logger.getLogger(SearchStudent.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    } else {
                        JOptionPane.showMessageDialog(null,
                                "Invalid URL input(too short or not start with 'http://')!",
                                "Warning",
                                JOptionPane.WARNING_MESSAGE);
                        return;
                    }
                } else {
                    JOptionPane.showMessageDialog(null,
                            "Name can not be empty!",
                            "Warning",
                            JOptionPane.WARNING_MESSAGE);
                    return;
                }
            } else {
                JOptionPane.showMessageDialog(null,
                        "Room number must be numeric!",
                        "Warning",
                        JOptionPane.WARNING_MESSAGE);
                return;
            }
        } else {
            JOptionPane.showMessageDialog(null,
                    "Student ID must be numeric!",
                    "Warning",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }


    }//GEN-LAST:event_rstSaveActionPerformed

    private void rstDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rstDeleteActionPerformed
        // TODO add your handling code here:
        int reply = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete the record?", "Warning", JOptionPane.YES_NO_OPTION);
        if (reply == JOptionPane.YES_OPTION) {
            this.file.delete();
            this.resetAttributs();
            this.dispose();
        } else {
            return;
        }

    }//GEN-LAST:event_rstDeleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SearchStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SearchStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SearchStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SearchStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SearchStudent(null, null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel idLab;
    private javax.swing.JTextField idTxt;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel nameLab;
    private javax.swing.JTextField nameTxt;
    private javax.swing.JLabel resultLable;
    private javax.swing.JLabel roomLab;
    private javax.swing.JTextField roomTxt;
    private javax.swing.JButton rstDelete;
    private javax.swing.JButton rstEdit;
    private javax.swing.JButton rstSave;
    private javax.swing.JLabel urlLab;
    private javax.swing.JTextField urlTxt;
    // End of variables declaration//GEN-END:variables
}
